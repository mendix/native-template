diff --git a/node_modules/react-native/Libraries/Components/TextInput/TextInputState.js b/node_modules/react-native/Libraries/Components/TextInput/TextInputState.js
index 9a38143..4bd33b4 100644
--- a/node_modules/react-native/Libraries/Components/TextInput/TextInputState.js
+++ b/node_modules/react-native/Libraries/Components/TextInput/TextInputState.js
@@ -50,12 +50,6 @@ function currentlyFocusedInput(): ?ComponentRef {
  * If no text field is focused it returns null
  */
 function currentlyFocusedField(): ?number {
-  if (__DEV__) {
-    console.error(
-      'currentlyFocusedField is deprecated and will be removed in a future release. Use currentlyFocusedInput',
-    );
-  }
-
   return findNodeHandle(currentlyFocusedInputRef);
 }
 
diff --git a/node_modules/react-native/Libraries/Image/RCTImageLoader.mm b/node_modules/react-native/Libraries/Image/RCTImageLoader.mm
index dac4ecc..d8b38dc 100644
--- a/node_modules/react-native/Libraries/Image/RCTImageLoader.mm
+++ b/node_modules/react-native/Libraries/Image/RCTImageLoader.mm
@@ -470,7 +470,15 @@ static UIImage *RCTResizeImageIfNeeded(UIImage *image, CGSize size, CGFloat scal
 
     // Add missing png extension
     if (request.URL.fileURL && request.URL.pathExtension.length == 0) {
-      mutableRequest.URL = [request.URL URLByAppendingPathExtension:@"png"];
+        // Check if there exists a file with that url on disk already
+        // This should fix issue https://github.com/facebook/react-native/issues/46870
+        if ([[NSFileManager defaultManager] fileExistsAtPath:request.URL.path]) {
+          mutableRequest.URL = request.URL;
+        } else {
+          // This is the default behavior in case there is no file on disk with no extension.
+          // We assume that the extension is `png`.
+          mutableRequest.URL = [request.URL URLByAppendingPathExtension:@"png"];
+        }
     }
     if (_redirectDelegate != nil) {
       mutableRequest.URL = [_redirectDelegate redirectAssetsURL:mutableRequest.URL];
diff --git a/node_modules/react-native/Libraries/Image/RCTUIImageViewAnimated.mm b/node_modules/react-native/Libraries/Image/RCTUIImageViewAnimated.mm
index 62131f5..5ce17e6 100644
--- a/node_modules/react-native/Libraries/Image/RCTUIImageViewAnimated.mm
+++ b/node_modules/react-native/Libraries/Image/RCTUIImageViewAnimated.mm
@@ -282,6 +282,10 @@ static NSUInteger RCTDeviceFreeMemory(void)
 
 - (void)displayLayer:(CALayer *)layer
 {
+  if (!_currentFrame) {
+    _currentFrame = self.image;
+  }
+  
   if (_currentFrame) {
     layer.contentsScale = self.animatedImageScale;
     layer.contents = (__bridge id)_currentFrame.CGImage;
diff --git a/node_modules/react-native/React/Base/RCTKeyCommands.m b/node_modules/react-native/React/Base/RCTKeyCommands.m
index 19ef5b1..b5653aa 100644
--- a/node_modules/react-native/React/Base/RCTKeyCommands.m
+++ b/node_modules/react-native/React/Base/RCTKeyCommands.m
@@ -18,11 +18,11 @@
 
 @interface UIEvent (UIPhysicalKeyboardEvent)
 
-@property (nonatomic) NSString *_modifiedInput;
-@property (nonatomic) NSString *_unmodifiedInput;
-@property (nonatomic) UIKeyModifierFlags _modifierFlags;
-@property (nonatomic) BOOL _isKeyDown;
-@property (nonatomic) long _keyCode;
+@property (nonatomic) NSString *modifiedInput;
+@property (nonatomic) NSString *unmodifiedInput;
+@property (nonatomic) UIKeyModifierFlags modifierFlags;
+@property (nonatomic) BOOL isKeyDown;
+@property (nonatomic) long keyCode;
 
 @end
 
@@ -116,16 +116,16 @@ RCT_NOT_IMPLEMENTED(-(instancetype)init)
   UIKeyModifierFlags modifierFlags = 0;
   BOOL isKeyDown = NO;
 
-  if ([event respondsToSelector:@selector(_modifiedInput)]) {
-    modifiedInput = [event _modifiedInput];
+  if ([event respondsToSelector:@selector(modifiedInput)]) {
+    modifiedInput = [event modifiedInput];
   }
 
-  if ([event respondsToSelector:@selector(_modifierFlags)]) {
-    modifierFlags = [event _modifierFlags];
+  if ([event respondsToSelector:@selector(modifierFlags)]) {
+    modifierFlags = [event modifierFlags];
   }
 
-  if ([event respondsToSelector:@selector(_isKeyDown)]) {
-    isKeyDown = [event _isKeyDown];
+  if ([event respondsToSelector:@selector(isKeyDown)]) {
+    isKeyDown = [event isKeyDown];
   }
 
   BOOL interactionEnabled = !RCTSharedApplication().isIgnoringInteractionEvents;
diff --git a/node_modules/react-native/React/DevSupport/RCTPackagerClient.h b/node_modules/react-native/React/DevSupport/RCTPackagerClient.h
index 6dea84f..7adc8f5 100644
--- a/node_modules/react-native/React/DevSupport/RCTPackagerClient.h
+++ b/node_modules/react-native/React/DevSupport/RCTPackagerClient.h
@@ -25,7 +25,7 @@ extern const int RCT_PACKAGER_CLIENT_PROTOCOL_VERSION;
 @protocol RCTPackagerClientMethod <NSObject>
 
 - (void)handleRequest:(NSDictionary<NSString *, id> *)params withResponder:(RCTPackagerClientResponder *)responder;
-- (void)handleNotification:(NSDictionary<NSString *, id> *)params;
+//- (void)handleNotification:(NSDictionary<NSString *, id> *)params;
 
 @optional
 
diff --git a/node_modules/react-native/React/DevSupport/RCTPackagerConnection.mm b/node_modules/react-native/React/DevSupport/RCTPackagerConnection.mm
index bd4075c..6a518c3 100644
--- a/node_modules/react-native/React/DevSupport/RCTPackagerConnection.mm
+++ b/node_modules/react-native/React/DevSupport/RCTPackagerConnection.mm
@@ -209,12 +209,12 @@ static void eraseRegistrationsWithToken(std::vector<Registration<Handler>> &regi
   dispatch_queue_t queue =
       [handler respondsToSelector:@selector(methodQueue)] ? [handler methodQueue] : dispatch_get_main_queue();
 
-  [self
-      addNotificationHandler:^(NSDictionary<NSString *, id> *notification) {
-        [handler handleNotification:notification];
-      }
-                       queue:queue
-                   forMethod:method];
+  // [self
+  //     addNotificationHandler:^(NSDictionary<NSString *, id> *notification) {
+  //       [handler handleNotification:notification];
+  //     }
+  //                      queue:queue
+  //                  forMethod:method];
   [self
       addRequestHandler:^(NSDictionary<NSString *, id> *request, RCTPackagerClientResponder *responder) {
         [handler handleRequest:request withResponder:responder];
