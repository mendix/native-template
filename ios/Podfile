# Uncomment the next line to define a global platform for your project
platform :ios, '10.0'

abstract_target "ReactNative" do
  # Comment the next line if you don't want to use dynamic frameworks
  # use_frameworks!

  # Pods for nativeTemplate
  # RN pods start
  pod 'React', :path => '../node_modules/react-native', :subspecs => [
    'ART',
    'Core',
    'CxxBridge',
    'DevSupport',
    'RCTActionSheet',
    'RCTAnimation',
    'RCTBlob',
    'RCTCameraRoll',
    'RCTGeolocation',
    'RCTImage',
    'RCTLinkingIOS',
    'RCTNetwork',
    'RCTSettings',
    'RCTText',
    'RCTVibration',
    'RCTWebSocket'
  ]

  pod 'yoga', :path => '../node_modules/react-native/ReactCommon/yoga'

  # Third party deps podspec link
  pod 'DoubleConversion', :podspec => '../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec'
  pod 'glog', :podspec => '../node_modules/react-native/third-party-podspecs/glog.podspec'
  pod 'Folly', :podspec => '../node_modules/react-native/third-party-podspecs/Folly.podspec'
  # RN pods end

  # Libs
  pod 'RNVectorIcons', :path => '../node_modules/react-native-vector-icons'
  pod 'RNGestureHandler', :podspec => '../node_modules/react-native-gesture-handler/RNGestureHandler.podspec'
  pod 'react-native-sqlite-storage', :path => '../node_modules/react-native-sqlite-storage'
  pod 'react-native-calendar-events', :path => '../node_modules/react-native-calendar-events'
  pod 'react-native-camera', :path => '../node_modules/react-native-camera'
  pod 'react-native-image-picker', :path => '../node_modules/react-native-image-picker'
  pod 'TouchID', :path => '../node_modules/react-native-touch-id'
  pod 'react-native-ble-plx', :path => '../node_modules/react-native-ble-plx'
  pod 'react-native-ble-plx-swift', :path => '../node_modules/react-native-ble-plx'
  pod 'RNSound', :podspec => '../node_modules/react-native-sound/RNSound.podspec'
  pod 'react-native-video', :podspec => '../node_modules/react-native-video/react-native-video.podspec'
  pod 'react-native-maps', :path => '../node_modules/react-native-maps'
  pod 'react-native-google-maps', :path => '../node_modules/react-native-maps'
  pod 'GoogleMaps'
  pod 'Google-Maps-iOS-Utils'
  pod 'RNSVG', :path => '../node_modules/react-native-svg'
  pod 'react-native-webview', :path => '../node_modules/react-native-webview'
  pod 'RNDeviceInfo', :path => '../node_modules/react-native-device-info'
  pod 'RNInAppBrowser', :path => '../node_modules/react-native-inappbrowser-reborn'
  pod 'RNViewShot', :path => '../node_modules/react-native-view-shot'
  pod 'react-native-geocoder', :path => '../node_modules/react-native-geocoder'
  pod 'RNCAsyncStorage', :path => '../node_modules/@react-native-community/async-storage'
  pod 'react-native-netinfo', :path => '../node_modules/@react-native-community/netinfo'

  pod 'RNFirebase', :path => '../node_modules/react-native-firebase/ios'
  pod 'Firebase/Core', '~> 5.15.0'
  pod 'Firebase/Messaging', '~> 5.15.0'
  pod 'ReactNativeDarkMode', :path => '../node_modules/react-native-dark-mode'
  pod 'IQKeyboardManagerSwift'
  pod 'CodePush', :path => '../node_modules/react-native-code-push'

  target 'nativeTemplate' do
    # Intentionally left empty
  end

  target 'dev' do
    # Intentionally left empty
  end
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      if target.name == "React"
        if config.name == "ReleaseDevApp"
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << "DEBUG=1"
        end
      end
    end
  end
end
