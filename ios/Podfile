source 'https://cdn.cocoapods.org/'

deployment_target = '12.4'
# Uncomment the next line to define a global platform for your project
platform :ios, deployment_target
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
require_relative './mendix_utils'
generate_mendix_delegate

def common_pods
  # Comment the next line if you don't want to use dynamic frameworks
  # use_frameworks!

  # RN development pods
  pod 'FBLazyVector', :path => '../node_modules/react-native/Libraries/FBLazyVector'
  pod 'FBReactNativeSpec', :path => '../node_modules/react-native/Libraries/FBReactNativeSpec'
  pod 'RCTRequired', :path => '../node_modules/react-native/Libraries/RCTRequired'
  pod 'RCTTypeSafety', :path => '../node_modules/react-native/Libraries/TypeSafety'
  pod 'React', :path => '../node_modules/react-native'
  pod 'React-Core', :path => '../node_modules/react-native'
  pod 'React-CoreModules', :path => '../node_modules/react-native/React/CoreModules'
  pod 'React-Core/DevSupport', :path => '../node_modules/react-native'
  pod 'React-Core/RCTWebSocket', :path => '../node_modules/react-native'

  pod 'React-RCTActionSheet', :path => '../node_modules/react-native/Libraries/ActionSheetIOS'
  pod 'React-RCTAnimation', :path => '../node_modules/react-native/Libraries/NativeAnimation'
  pod 'React-RCTBlob', :path => '../node_modules/react-native/Libraries/Blob'
  pod 'React-RCTImage', :path => '../node_modules/react-native/Libraries/Image'
  pod 'React-RCTLinking', :path => '../node_modules/react-native/Libraries/LinkingIOS'
  pod 'React-RCTNetwork', :path => '../node_modules/react-native/Libraries/Network'
  pod 'React-RCTSettings', :path => '../node_modules/react-native/Libraries/Settings'
  pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text'
  pod 'React-RCTVibration', :path => '../node_modules/react-native/Libraries/Vibration'

  pod 'React-cxxreact', :path => '../node_modules/react-native/ReactCommon/cxxreact'
  pod 'React-jsi', :path => '../node_modules/react-native/ReactCommon/jsi'
  pod 'React-jsiexecutor', :path => '../node_modules/react-native/ReactCommon/jsiexecutor'
  pod 'React-jsinspector', :path => '../node_modules/react-native/ReactCommon/jsinspector'
  pod 'ReactCommon/jscallinvoker', :path => '../node_modules/react-native/ReactCommon'
  pod 'ReactCommon/turbomodule/core', :path => '../node_modules/react-native/ReactCommon'
  pod 'Yoga', :path => '../node_modules/react-native/ReactCommon/yoga'

  pod 'DoubleConversion', :podspec => '../node_modules/react-native/third-party-podspecs/DoubleConversion.podspec'
  pod 'glog', :podspec => '../node_modules/react-native/third-party-podspecs/glog.podspec'
  pod 'Folly', :podspec => '../node_modules/react-native/third-party-podspecs/Folly.podspec'

  permissions_path = '../node_modules/react-native-permissions/ios'
  pod 'RNPermissions', :path => '../node_modules/react-native-permissions'
  pod 'Permission-Camera', :path => "#{permissions_path}/Camera"
  pod 'Permission-PhotoLibrary', :path => "#{permissions_path}/PhotoLibrary"

  # RN pods end

  # Manually linked dependencies
  pod 'react-native-splash-screen', :path => '../node_modules/react-native-splash-screen'

  # Third party dependencies of dependencies
  pod 'IQKeyboardManager'
end

target 'nativeTemplate' do
  generate_pod_dependencies
  use_native_modules!
  common_pods
  # Intentionally left empty
end

target 'dev' do
  generate_pod_dependencies
  use_native_modules!
  common_pods
  # Intentionally left empty
end

post_install do |installer|
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['ONLY_ACTIVE_ARCH'] = 'NO'
      if target.name == "React"
        if config.name == "ReleaseDevApp"
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << "DEBUG=1"
        end
      end
    end
  end

  ## Fix for XCode >=12.5. see https://github.com/facebook/react-native/issues/28405#issuecomment-827353727
  major, minor, * = XCODE_VERSION.split('.')
  if major.to_i > 12 || (major.to_i == 12 && minor.to_i >= 5)
    puts "Found Xcode v#{XCODE_VERSION}. Replacing RCTCxxBridge's contents"
    find_and_replace("../node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm", "_initializeModules:(NSArray<id<RCTBridgeModule>> *)modules", "_initializeModules:(NSArray<Class> *)modules")
    find_and_replace("../node_modules/react-native/ReactCommon/turbomodule/core/platform/ios/RCTTurboModuleManager.mm", "RCTBridgeModuleNameForClass(module))", "RCTBridgeModuleNameForClass(Class(module)))")
  end
  if major.to_i > 14 || (major.to_i == 14 && minor.to_i >= 2)
    find_and_replace("Pods/GoogleDataTransportCCTSupport/GoogleDataTransportCCTSupport/GDTCCTLibrary/GDTCCTPrioritizer.m", "static NSString *ArchivePath()", "static NSString *ArchivePath(void)")
    find_and_replace("Pods/GoogleDataTransportCCTSupport/GoogleDataTransportCCTSupport/GDTCCTLibrary/GDTCCTNanopbHelpers.m", "gdt_cct_ClientInfo GDTCCTConstructClientInfo()", "gdt_cct_ClientInfo GDTCCTConstructClientInfo(void)")
    find_and_replace("Pods/GoogleDataTransportCCTSupport/GoogleDataTransportCCTSupport/GDTCCTLibrary/GDTCCTNanopbHelpers.m", "gdt_cct_IosClientInfo GDTCCTConstructiOSClientInfo()", "gdt_cct_IosClientInfo GDTCCTConstructiOSClientInfo(void)")
    find_and_replace("Pods/GoogleDataTransportCCTSupport/GoogleDataTransportCCTSupport/GDTCCTLibrary/GDTCCTNanopbHelpers.m", "NSData *GDTCCTConstructNetworkConnectionInfoData()", "NSData *GDTCCTConstructNetworkConnectionInfoData(void)")
    find_and_replace("Pods/GoogleDataTransportCCTSupport/GoogleDataTransportCCTSupport/GDTCCTLibrary/GDTCCTNanopbHelpers.m", "gdt_cct_NetworkConnectionInfo_MobileSubtype GDTCCTNetworkConnectionInfoNetworkMobileSubtype()", "gdt_cct_NetworkConnectionInfo_MobileSubtype GDTCCTNetworkConnectionInfoNetworkMobileSubtype(void)")
    find_and_replace("Pods/GoogleDataTransport/GoogleDataTransport/GDTCORLibrary/GDTCORClock.m", "static int64_t KernelBootTimeInNanoseconds()", "static int64_t KernelBootTimeInNanoseconds(void)")
    find_and_replace("Pods/GoogleDataTransport/GoogleDataTransport/GDTCORLibrary/GDTCORClock.m", "static int64_t UptimeInNanoseconds()", "static int64_t UptimeInNanoseconds(void)")
    find_and_replace("Pods/GoogleDataTransport/GoogleDataTransport/GDTCORLibrary/GDTCORPlatform.m", "GDTCORNetworkType GDTCORNetworkTypeMessage()", "GDTCORNetworkType GDTCORNetworkTypeMessage(void)")
    find_and_replace("Pods/GoogleDataTransport/GoogleDataTransport/GDTCORLibrary/GDTCORPlatform.m", "GDTCORNetworkMobileSubtype GDTCORNetworkMobileSubTypeMessage()", "GDTCORNetworkMobileSubtype GDTCORNetworkMobileSubTypeMessage(void)")
    find_and_replace("Pods/FirebaseMessaging/Firebase/Messaging/Protos/GtalkExtensions.pbobjc.m", "// imports needed when using CocoaPods.", "#include <libkern/OSAtomic.h>")
    find_and_replace("Pods/FirebaseMessaging/Firebase/Messaging/Protos/GtalkCore.pbobjc.m", "// imports needed when using CocoaPods.", "#include <libkern/OSAtomic.h>")
  end
end

def find_and_replace(dir, findstr, replacestr)
  Dir[dir].each do |name|
    text = File.read(name)
    replace = text.gsub(findstr, replacestr)
    if text != replace
      puts "Fix: " + name
      File.open(name, "w") { |file| file.puts replace }
      STDOUT.flush
    end
  end
  Dir[dir + '*/'].each(&method(:find_and_replace))
end
